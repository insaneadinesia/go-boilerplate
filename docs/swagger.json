{
    "swagger": "2.0",
    "info": {
        "description": "This is boilerplate code for golang project",
        "title": "Go-Boilerplate",
        "contact": {
            "name": "Rachmat Adi Prakoso",
            "email": "rachmat.adi.p@gmail.com"
        },
        "version": "1.0.0"
    },
    "host": "localhost:9000",
    "paths": {
        "/health": {
            "get": {
                "description": "API for do health check to dependencies used",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health Check"
                ],
                "summary": "Health Check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.DefaultResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/health_check.StatusCheck"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.DefaultResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/health_check.StatusCheck"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/users": {
            "post": {
                "description": "API for create user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Create User",
                "parameters": [
                    {
                        "description": "Payload Create User",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.CreateUpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.DefaultResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.DefaultResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/response.DefaultResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.DefaultResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "health_check.StatusCheck": {
            "type": "object",
            "properties": {
                "db_status": {
                    "type": "string",
                    "example": "OK/ERROR"
                }
            }
        },
        "response.DefaultResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "x-nullable": true,
                    "x-omitempty": true
                },
                "error_code": {
                    "type": "string",
                    "x-omitempty": true
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "user.CreateUpdateUserRequest": {
            "type": "object",
            "required": [
                "email",
                "name",
                "sub_district_id",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "rachmat.adi.p@gmail.com"
                },
                "name": {
                    "type": "string",
                    "example": "Rachmat Adi Prakoso"
                },
                "sub_district_id": {
                    "type": "integer",
                    "example": 10001
                },
                "username": {
                    "type": "string",
                    "example": "mamatosai"
                }
            }
        }
    }
}