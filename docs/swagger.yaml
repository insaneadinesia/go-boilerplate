definitions:
  github_com_insaneadinesia_go-boilerplate_internal_app_usecase_user.GetAllUserResponse:
    properties:
      pagination:
        $ref: '#/definitions/pagination.PaginationResponse'
      users:
        items:
          $ref: '#/definitions/user.UserResponse'
        type: array
    type: object
  health_check.StatusCheck:
    properties:
      db_status:
        example: OK/ERROR
        type: string
    type: object
  pagination.PaginationResponse:
    properties:
      page:
        example: 1
        type: integer
      page_count:
        example: 10
        type: integer
      per_page:
        example: 20
        type: integer
      total_count:
        example: 200
        type: integer
    type: object
  response.DefaultResponse:
    properties:
      data: {}
      message:
        type: string
    type: object
  response.ErrorResponse:
    properties:
      data: {}
      error_code:
        type: string
      message:
        type: string
    type: object
  user.CreateUpdateUserRequest:
    properties:
      email:
        example: rachmat.adi.p@gmail.com
        type: string
      name:
        example: Rachmat Adi Prakoso
        type: string
      sub_district_id:
        example: 10001
        type: integer
      username:
        example: mamatosai
        type: string
    required:
    - email
    - name
    - sub_district_id
    - username
    type: object
  user.UserDetailResponse:
    properties:
      created_at:
        example: 2025-02-28T12:00:00+0700
        type: string
      email:
        example: rachmat.adi.p@gmail.com
        type: string
      location:
        $ref: '#/definitions/user.UserLocation'
      name:
        example: Rachmat Adi Prakoso
        type: string
      updated_at:
        example: 2025-02-28T12:00:00+0700
        type: string
      username:
        example: mamatosai
        type: string
      uuid:
        example: d1e7cbc6-b6db-4f1f-a257-c6985dc2c2e3
        type: string
    type: object
  user.UserLocation:
    properties:
      city_id:
        example: 101
        type: integer
      city_name:
        example: KOTA TANGERANG
        type: string
      district_id:
        example: 1001
        type: integer
      district_name:
        example: KARAWACI
        type: string
      province_id:
        example: 11
        type: integer
      province_name:
        example: BANTEN
        type: string
      sub_district_id:
        example: 10001
        type: integer
      sub_district_name:
        example: CIMONE JAYA
        type: string
    type: object
  user.UserResponse:
    properties:
      created_at:
        example: 2025-02-28T12:00:00+0700
        type: string
      email:
        example: rachmat.adi.p@gmail.com
        type: string
      name:
        example: Rachmat Adi Prakoso
        type: string
      updated_at:
        example: 2025-02-28T12:00:00+0700
        type: string
      username:
        example: mamatosai
        type: string
      uuid:
        example: d1e7cbc6-b6db-4f1f-a257-c6985dc2c2e3
        type: string
    type: object
host: localhost:9000
info:
  contact:
    email: rachmat.adi.p@gmail.com
    name: Rachmat Adi Prakoso
  description: This is boilerplate code for golang project
  title: Go-Boilerplate
  version: 1.0.0
paths:
  /health:
    get:
      description: API for do health check to dependencies used
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.DefaultResponse'
            - properties:
                data:
                  $ref: '#/definitions/health_check.StatusCheck'
              type: object
        "503":
          description: Service Unavailable
          schema:
            allOf:
            - $ref: '#/definitions/response.DefaultResponse'
            - properties:
                data:
                  $ref: '#/definitions/health_check.StatusCheck'
              type: object
      summary: Health Check
      tags:
      - Health Check
  /users:
    get:
      description: API for get all users
      parameters:
      - default: 1
        description: page
        in: query
        name: page
        type: integer
      - default: 20
        description: per_page
        in: query
        name: per_page
        type: integer
      - description: search by name
        in: query
        name: name
        type: string
      - description: search by username
        in: query
        name: username
        type: string
      - description: search by email
        in: query
        name: email
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.DefaultResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_insaneadinesia_go-boilerplate_internal_app_usecase_user.GetAllUserResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.ErrorResponse'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.ErrorResponse'
            - properties:
                data:
                  type: object
              type: object
      summary: Get All Users
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: API for create user
      parameters:
      - description: Payload Create User
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/user.CreateUpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.DefaultResponse'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.ErrorResponse'
            - properties:
                data:
                  type: object
              type: object
        "422":
          description: Unprocessable Entity
          schema:
            allOf:
            - $ref: '#/definitions/response.ErrorResponse'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.ErrorResponse'
            - properties:
                data:
                  type: object
              type: object
      summary: Create User
      tags:
      - Users
  /users/{uuid}:
    delete:
      description: API for delete user by uuid
      parameters:
      - default: d1e7cbc6-b6db-4f1f-a257-c6985dc2c2e3
        description: user uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.DefaultResponse'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/response.ErrorResponse'
            - properties:
                data:
                  type: object
              type: object
        "422":
          description: Unprocessable Entity
          schema:
            allOf:
            - $ref: '#/definitions/response.ErrorResponse'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.ErrorResponse'
            - properties:
                data:
                  type: object
              type: object
      summary: Delete User By UUID
      tags:
      - Users
    get:
      description: API for get user detail by uuid
      parameters:
      - default: d1e7cbc6-b6db-4f1f-a257-c6985dc2c2e3
        description: user uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.DefaultResponse'
            - properties:
                data:
                  $ref: '#/definitions/user.UserDetailResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.ErrorResponse'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/response.ErrorResponse'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.ErrorResponse'
            - properties:
                data:
                  type: object
              type: object
      summary: Get User Detail By UUID
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: API for update user
      parameters:
      - default: d1e7cbc6-b6db-4f1f-a257-c6985dc2c2e3
        description: user uuid
        in: path
        name: uuid
        required: true
        type: string
      - description: Payload Update User
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/user.CreateUpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.DefaultResponse'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.ErrorResponse'
            - properties:
                data:
                  type: object
              type: object
        "422":
          description: Unprocessable Entity
          schema:
            allOf:
            - $ref: '#/definitions/response.ErrorResponse'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.ErrorResponse'
            - properties:
                data:
                  type: object
              type: object
      summary: Update User
      tags:
      - Users
swagger: "2.0"
