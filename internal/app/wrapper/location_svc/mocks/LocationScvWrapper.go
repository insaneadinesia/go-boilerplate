// Code generated by mockery v2.52.3. DO NOT EDIT.

package mocks

import (
	context "context"

	location_svc "github.com/insaneadinesia/go-boilerplate/internal/app/wrapper/location_svc"
	mock "github.com/stretchr/testify/mock"
)

// LocationScvWrapper is an autogenerated mock type for the LocationScvWrapper type
type LocationScvWrapper struct {
	mock.Mock
}

// GetSubDistrictDetail provides a mock function with given fields: ctx, id
func (_m *LocationScvWrapper) GetSubDistrictDetail(ctx context.Context, id int64) (location_svc.GetSubDistrictDetailResponse, error) {
	ret := _m.Called(ctx, id)

	if len(ret) == 0 {
		panic("no return value specified for GetSubDistrictDetail")
	}

	var r0 location_svc.GetSubDistrictDetailResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, int64) (location_svc.GetSubDistrictDetailResponse, error)); ok {
		return rf(ctx, id)
	}
	if rf, ok := ret.Get(0).(func(context.Context, int64) location_svc.GetSubDistrictDetailResponse); ok {
		r0 = rf(ctx, id)
	} else {
		r0 = ret.Get(0).(location_svc.GetSubDistrictDetailResponse)
	}

	if rf, ok := ret.Get(1).(func(context.Context, int64) error); ok {
		r1 = rf(ctx, id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewLocationScvWrapper creates a new instance of LocationScvWrapper. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewLocationScvWrapper(t interface {
	mock.TestingT
	Cleanup(func())
}) *LocationScvWrapper {
	mock := &LocationScvWrapper{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
